@page "/dashboard"
@rendermode InteractiveServer
@using Frontend.Pages
@using Syncfusion.Blazor.Layouts
@using DataAccess.Models
@using DataAccess.Services
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inject UserService UserService
@inject CollaboratorService OrderService

<PageTitle>Api Dashboard</PageTitle>
<h2>Api Dashboard</h2>
<div id="control-region">
    <div class="control-section" id="target">
        <div style="padding:5px;text-align:right;">
            <Syncfusion.Blazor.Buttons.SfButton CssClass="e-btn e-info" Content="Add Panel" @onclick="AddClick"></Syncfusion.Blazor.Buttons.SfButton>
        </div>
        <SfDashboardLayout @ref="dashboardObject" AllowFloating="true" AllowResizing="true" Columns="5">
            <DashboardLayoutPanels>
                <DashboardLayoutPanel Id="one" Column="0" Row="0">
                    <HeaderTemplate>Panel 1</HeaderTemplate>
                    <ContentTemplate>
                        <SfChart Title="User Analysis">
                            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Last Name"></ChartPrimaryXAxis>
                            <ChartPrimaryYAxis Title="Count"></ChartPrimaryYAxis>
                            <ChartSeriesCollection>
                                <ChartSeries DataSource="@Users" XName="LastName" YName="Id" Type="ChartSeriesType.Bar">
                                    <ChartMarker>
                                        <ChartDataLabel Visible="true"></ChartDataLabel>
                                    </ChartMarker>
                                </ChartSeries>
                            </ChartSeriesCollection>
                        </SfChart>
                    </ContentTemplate>
                </DashboardLayoutPanel>
            
              

                <DashboardLayoutPanel Id="three" Row="1" Column="0" SizeX=1 SizeY=1>
                    <HeaderTemplate>Panel 3</HeaderTemplate>
                    <ContentTemplate>
                        <SfChart Title="Sales Analysis">
                            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Month"></ChartPrimaryXAxis>
                            <ChartPrimaryYAxis Title="Sales in Dollar"></ChartPrimaryYAxis>
                            <ChartSeriesCollection>
                                <ChartSeries DataSource="@Sales" XName="Month" YName="SalesValue" Type="ChartSeriesType.Column">
                                    <ChartMarker>
                                        <ChartDataLabel Visible="true"></ChartDataLabel>
                                    </ChartMarker>
                                </ChartSeries>
                            </ChartSeriesCollection>
                            <ChartEvents OnPointRender="PointRenderEvent"></ChartEvents>
                        </SfChart>
                    </ContentTemplate>
                </DashboardLayoutPanel>
            
                <DashboardLayoutPanel Id="five" Row="1" Column="1" SizeX=1 SizeY=1>
                    <HeaderTemplate>Panel 5</HeaderTemplate>
                    <ContentTemplate>
                    
                        <SfAccumulationChart Title="Mobile Browser Statistics">
                            <AccumulationChartSeriesCollection>
                                <AccumulationChartSeries DataSource="@StatisticsDetails" XName="Browser" YName="Users"
                                                         Name="Browser">
                                </AccumulationChartSeries>
                            </AccumulationChartSeriesCollection>

                            <AccumulationChartLegendSettings Visible="true"></AccumulationChartLegendSettings>
                        </SfAccumulationChart>

                        @code {
                            public class Statistics
                            {
                                public string Browser { get; set; }
                                public double Users { get; set; }
                            }

                            public List<Statistics> StatisticsDetails = new List<Statistics>
                                {
                                new Statistics { Browser = "Chrome", Users = 37 },
                                new Statistics { Browser = "UC Browser", Users = 17 },
                                new Statistics { Browser = "iPhone", Users = 19 },
                                new Statistics { Browser = "Others", Users = 4  },
                                new Statistics { Browser = "Opera", Users = 11 },
                                new Statistics { Browser = "Android", Users = 12 },
                                };
                         }
                    </ContentTemplate>
                </DashboardLayoutPanel>
           
                <DashboardLayoutPanel Id="seven" Row="0" Column="0" SizeX="3" SizeY="3">
                    <HeaderTemplate>Team Members (Panel 7)</HeaderTemplate>
                    <ContentTemplate>
                        <SfGrid ID="Grid" DataSource="@Orders" @ref="Grid" AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowGrouping="true" AllowExcelExport="true" AllowSelection="true"
                                AllowSorting="true" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel", "Update", "ExcelExport", "Search" })" Height="100%" Width="100%">
                            <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
                            <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.FilterBar"></GridFilterSettings>
                            <GridPageSettings PageSize="20" PageSizes="true"></GridPageSettings>
                            <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                            <GridEvents OnToolbarClick="ToolbarClick" TValue="Order"></GridEvents>
                            <GridColumns>
                                <GridColumn Type="Syncfusion.Blazor.Grids.ColumnType.CheckBox" Width="50"></GridColumn>
                                <GridColumn Field="@nameof(Order.OrderID)" HeaderText="Order ID" IsPrimaryKey="true" ValidationRules="@(new ValidationRules { Required = true })" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right" Width="120"></GridColumn>
                                <GridColumn Field="@nameof(Order.CustomerID)" HeaderText="Customer Name" ValidationRules="@(new ValidationRules { Required = true })" Width="120"></GridColumn>
                                <GridColumn Field="@nameof(Order.OrderDate)" HeaderText="Order Date" EditType="EditType.DatePickerEdit" Format="d" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right" Width="130" Type="Syncfusion.Blazor.Grids.ColumnType.Date"></GridColumn>
                                <GridColumn Field="@nameof(Order.Freight)" HeaderText="Freight" Format="C2" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right" EditType="EditType.NumericEdit" Width="120"></GridColumn>
                                <GridColumn Field="@nameof(Order.ShipCountry)" HeaderText="Ship Country" EditType="EditType.DropDownEdit" Width="150"></GridColumn>
                            </GridColumns>
                        </SfGrid>
                    </ContentTemplate>
                </DashboardLayoutPanel>

                @code {
        public List<Order>? Orders { get; set; }
        SfGrid<Order>? Grid;
        protected override void OnInitialized()
        {
            Orders = Enumerable.Range(1, 75).Select(x => new Order()
            {
                OrderID = 1000 + x,
                CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
                Freight = 2.1 * x,
                OrderDate = DateTime.Now.AddDays(-x),
                ShipCountry = (new string[] { "USA", "UK", "CHINA", "RUSSIA", "INDIA" })[new Random().Next(5)]
            }).ToList();
        }
        public void ToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
        {
            if (args.Item.Id == "Grid_excelexport")
            {
                    this.Grid?.ExportToExcelAsync();
            }
        }
        public class Order
        {
            public int? OrderID { get; set; }
            public string? CustomerID { get; set; }
            public DateTime? OrderDate { get; set; }
            public double? Freight { get; set; }
            public string? ShipCountry { get; set; }
        }
                }

                <DashboardLayoutPanel Id="eight" Row="0" Column="3" SizeX=1 SizeY=1>
                    <HeaderTemplate>Panel 8</HeaderTemplate>
                    <ContentTemplate>
                        <h2>Panel 8</h2>
                    </ContentTemplate>
                </DashboardLayoutPanel>
            </DashboardLayoutPanels>
        </SfDashboardLayout>

            @code {
                private IEnumerable<UserModel> Users;

             
                public class SalesInfo
                {
                    public string Month { get; set; }
                    public double SalesValue { get; set; }
                }

                public List<SalesInfo> Sales = new List<SalesInfo>
                    {
                    new SalesInfo { Month = "Jan", SalesValue = 40 },
                    new SalesInfo { Month = "Feb", SalesValue = 20 },
                    new SalesInfo { Month = "Mar", SalesValue = 26 },
                    new SalesInfo { Month = "Apr", SalesValue = 20 },
                    new SalesInfo { Month = "May", SalesValue = 40 },
                    new SalesInfo { Month = "Jun", SalesValue = 32 },
                    new SalesInfo { Month = "Jul", SalesValue = 35 }
                    };

                private string[] colors = new string[] { "#7dba53", "#83a0cf", "#6FAAB0", "#7dba53", "#83a0cf", "#6FAAB0", "#7dba53" };
                private int colorIndex = 0;

                public void PointRenderEvent(PointRenderEventArgs args)
                {
                    args.Fill = colors[colorIndex % colors.Length];
                    colorIndex++;
                }
            }

    </div>
</div>
<br />
<style>
    .e-dashboardlayout {
        padding: 10px;
    }

        .e-dashboardlayout.e-control .e-panel:hover span {
            display: block;
        }

        .e-dashboardlayout .e-panel .e-panel-container .text-align {
            vertical-align: middle;
            font-weight: 600;
            font-size: 20px;
            text-align: center;
        }

    .e-template-icon {
        padding: 10px;
        float: right;
        display: none;
    }

    .text-align {
        line-height: 160px;
    }

    .sb-demo-section .container-fluid {
        background: #E5E5E5;
    }

    .ulstyle {
        margin: 0px;
        padding-left: 20px;
        display: inline-block;
    }

    .list {
        float: left;
        line-height: 20px;
        margin: 10px;
        min-width: 350px;
    }
</style>
@code {
    SfDashboardLayout? dashboardObject;
    public int Count = 9;
    public async Task AddClick(System.EventArgs args)
    {
        string ContentValue = this.Count.ToString();
        PanelModel panel = new PanelModel
        {
            Id = this.Count.ToString() + "_layout",
            SizeX = 1,
            SizeY = 1,
            Column = 0,
            Row = 0,
            Header = @<div class='text-align'> Panel @ContentValue </div>
        };
        await dashboardObject!.AddPanelAsync(panel);
        this.Count = this.Count + 1;
    }
}